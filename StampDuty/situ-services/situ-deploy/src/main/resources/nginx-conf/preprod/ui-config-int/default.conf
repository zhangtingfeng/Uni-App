server {
    # reverse-proxy
    listen       80;
    server_name  preprod-situ.trafigura.com   internal-preprod-situ.eu-west-2.elasticbeanstalk.com;

    server_tokens off;
    autoindex  off;
    root   /var/www/html/situssl;
    index  index.html index.htm;

        gzip on;
    gzip_comp_level  6;
    gzip_min_length  512;
    gzip_http_version 1.1;
    gzip_vary  on;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [4-6] \.";
    gzip_types
       text/css
       text/plain
       text/javascript
       application/javascript
       application/json
       application/x-javascript
       application/xml
       application/xml+rss
       application/xhtml+xml
       application/x-font-ttf
       application/x-font-opentype
       application/vnd.ms-fontobject
       image/svg+xml
       image/x-icon
       application/rss+xml
       application/atom_xml;
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=15778476; includeSubdomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;

    if ($request_method !~ ^(GET|HEAD|POST|OPTIONS|PUT)$) {
        return 444;
    }
    client_body_buffer_size 8k;
    client_max_body_size 2m;
    client_body_in_single_buffer on;
    #client_body_temp_pathtemp_files 1 2;
    client_header_buffer_size  1m;
    large_client_header_buffers 4 8k;

        set $cors '';
    set $cors_origin '';
    set $cors_methods '';
    set $cors_maxage '';
    set $cors_headers '';
    set $cors_cred '';

    if ($http_origin ~* (^https.*\.trafigura\.com$)) {

        set $cors "true";

        set $cors_origin "$http_origin";
        set $cors_methods "POST, GET, HEAD, OPTIONS, PUT";
        set $cors_maxage "7200";
        set $cors_headers "User-Agent, DNT, If-Modified-Since, Keep-Alive, Cache-Control, Range, Authorization, Content-Type, x-requested-with, Content-Type, Origin, Accept, client-security-token";
        set $cors_cred "true";
    }

    if ($request_method = 'OPTIONS') {
        set $cors "${cors}options";
        rewrite (.*) /returntrueoptions/ last;
    }

    if ($uri ~* (^\/.*dashboard\/.*)){
        rewrite (^\/.*dashboard\/.*) /index.html last;
    }

    location  /logout {
        return 200 /index.html;
    }
    location /healthcheck {
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }


    location = /returntrueoptions/ {

        add_header "Access-Control-Allow-Origin" $cors_origin always;
        add_header "Access-Control-Allow-Methods" $cors_methods always;
        add_header "Access-Control-Max-Age" $cors_maxage always;
        add_header "Access-Control-Allow-Headers" $cors_headers always ;
        add_header "Access-Control-Allow-Credentials" $cors_cred always;

        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    location /health {
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }

    location / {

        add_header "Access-Control-Allow-Origin" $cors_origin always;
        add_header "Access-Control-Allow-Methods" $cors_methods always;
        add_header "Access-Control-Max-Age" $cors_maxage always;
        add_header "Access-Control-Allow-Headers" $cors_headers always ;
        add_header "Access-Control-Allow-Credentials" $cors_cred always;

        try_files $uri $uri/ /index.html;
    }

    location @return_304_indexhtml {
        return 304 /index.html;
    }

}