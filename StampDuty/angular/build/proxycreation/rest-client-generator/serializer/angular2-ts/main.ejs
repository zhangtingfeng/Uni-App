/**
 * Generated REST client by rest-client-generator
 */
import {
  Injectable,
  InjectionToken,
  Inject,
  NgModule
} from '@angular/core';
import {
  HttpClientModule,
  HttpClient,
  HttpHeaders,
  HttpParams,
  HttpResponse
} from '@angular/common/http';

import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
<%- services.map(function (service) { return 'import {' + service.name + ' } from \'./' + service.name + '\'' }).join(';\n'); %>
<% if (isModuleService) { %>
  <%- services.map(function (service) { return 'import { I' + service.name + ' } from \'./I' + service.name + '\'' }).join(';\n'); %>
<% } %>    
/**
 * Configuration stuff.
 */
export const SERVICE_ROOT_URL = new InjectionToken<string>('service-root-url');
export const SERVICE_JSON_DATE_PATTERN = new InjectionToken<string>('service-json-date-pattern');

/**
 * Some internal stuff.
 */

export function substituteUrl(url: string, values: Object): string {
  Object.keys(values).map(key => {
    url = url.replace('{' + encodeURIComponent(key) + '}', encodeURIComponent(values[key]));
  });
  return url;
}

export function encodeParams(values: Object): string {
  return Object.keys(values).map(key => {
    return encodeURIComponent(key) + '=' + encodeURIComponent(values[key]);
  }).join('&');
}


/**
 * The module with all services.
 */
@NgModule({
  imports: [
    HttpClientModule
  ],
  providers: [
    { provide: SERVICE_ROOT_URL, useValue: '<%- rootUrl %>' },
    { provide: SERVICE_JSON_DATE_PATTERN, useValue: '\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?' },
    // accept: YYYY-MM-DDThh:mm:ss, YYYY-MM-DDThh:mm:ssTZD, YYYY-MM-DDThh:mm:ss.sTZD
    <% if (isModuleService) { %>
    <%- services.map(function (service) { return '{ provide: I' + service.name + ', useClass: ' + service.name + ' }';}).join(',\n'); %>
    <% } else { %>
    <%- services.map(function (service) { return service.name; }).join(',\n'); %>  
    <% } %>      
    
  ]
})
export class <%- moduleName %> {
}
